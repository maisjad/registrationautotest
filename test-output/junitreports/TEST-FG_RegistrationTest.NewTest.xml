<?xml version="1.0" encoding="UTF-8"?>
<!-- Generated by org.testng.reporters.JUnitReportReporter -->
<testsuite skipped="12" hostname="MAIS-JARADAT" name="FG_RegistrationTest.NewTest" tests="13" failures="0" timestamp="14 يول 2019 08:56:59 GMT" time="94.852" errors="1">
  <testcase name="launchBrowser" time="94.852" classname="FG_RegistrationTest.NewTest">
    <error type="org.openqa.selenium.WebDriverException" message="unknown error: unable to discover open pages
Build info: version: &#039;3.141.59&#039;, revision: &#039;e82be7d358&#039;, time: &#039;2018-11-14T08:25:53&#039;
System info: host: &#039;MAIS-JARADAT&#039;, ip: &#039;10.20.20.82&#039;, os.name: &#039;Windows 10&#039;, os.arch: &#039;amd64&#039;, os.version: &#039;10.0&#039;, java.version: &#039;1.8.0_121&#039;
Driver info: driver.version: ChromeDriver
remote stacktrace: Backtrace:
	Ordinal0 [0x00F31B23+1448739]
	Ordinal0 [0x00EB5A11+940561]
	Ordinal0 [0x00E42293+467603]
	Ordinal0 [0x00DDF1DA+61914]
	Ordinal0 [0x00DDBBBD+48061]
	Ordinal0 [0x00DF8D19+167193]
	Ordinal0 [0x00DF88ED+166125]
	Ordinal0 [0x00DF6FFB+159739]
	Ordinal0 [0x00DE09F6+68086]
	Ordinal0 [0x00DE1990+72080]
	Ordinal0 [0x00DE1929+71977]
	GetHandleVerifier [0x01072E4C+1172140]
	GetHandleVerifier [0x00FCFE35+504469]
	GetHandleVerifier [0x00FCFBD0+503856]
	Ordinal0 [0x00F3C9A8+1493416]
	GetHandleVerifier [0x00FD060A+506474]
	Ordinal0 [0x00EC7136+1012022]
	Ordinal0 [0x00EC6FAF+1011631]
	Ordinal0 [0x00ED133B+1053499]
	Ordinal0 [0x00ED14A3+1053859]
	Ordinal0 [0x00ED04D5+1049813]
	BaseThreadInitThunk [0x764B8494+36]
	RtlAreBitsSet [0x773041C8+136]
	RtlAreBitsSet [0x77304198+88]
">
      <![CDATA[org.openqa.selenium.WebDriverException: unknown error: unable to discover open pages
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:25:53'
System info: host: 'MAIS-JARADAT', ip: '10.20.20.82', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '1.8.0_121'
Driver info: driver.version: ChromeDriver
remote stacktrace: Backtrace:
Ordinal0 [0x00F31B23+1448739]
Ordinal0 [0x00EB5A11+940561]
Ordinal0 [0x00E42293+467603]
Ordinal0 [0x00DDF1DA+61914]
Ordinal0 [0x00DDBBBD+48061]
Ordinal0 [0x00DF8D19+167193]
Ordinal0 [0x00DF88ED+166125]
Ordinal0 [0x00DF6FFB+159739]
Ordinal0 [0x00DE09F6+68086]
Ordinal0 [0x00DE1990+72080]
Ordinal0 [0x00DE1929+71977]
GetHandleVerifier [0x01072E4C+1172140]
GetHandleVerifier [0x00FCFE35+504469]
GetHandleVerifier [0x00FCFBD0+503856]
Ordinal0 [0x00F3C9A8+1493416]
GetHandleVerifier [0x00FD060A+506474]
Ordinal0 [0x00EC7136+1012022]
Ordinal0 [0x00EC6FAF+1011631]
Ordinal0 [0x00ED133B+1053499]
Ordinal0 [0x00ED14A3+1053859]
Ordinal0 [0x00ED04D5+1049813]
BaseThreadInitThunk [0x764B8494+36]
RtlAreBitsSet [0x773041C8+136]
RtlAreBitsSet [0x77304198+88]

at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at sun.reflect.NativeConstructorAccessorImpl.newInstance(Unknown Source)
at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(Unknown Source)
at java.lang.reflect.Constructor.newInstance(Unknown Source)
at org.openqa.selenium.remote.W3CHandshakeResponse.lambda$errorHandler$0(W3CHandshakeResponse.java:62)
at org.openqa.selenium.remote.HandshakeResponse.lambda$getResponseFunction$0(HandshakeResponse.java:30)
at org.openqa.selenium.remote.ProtocolHandshake.lambda$createSession$0(ProtocolHandshake.java:126)
at java.util.stream.ReferencePipeline$3$1.accept(Unknown Source)
at java.util.Spliterators$ArraySpliterator.tryAdvance(Unknown Source)
at java.util.stream.ReferencePipeline.forEachWithCancel(Unknown Source)
at java.util.stream.AbstractPipeline.copyIntoWithCancel(Unknown Source)
at java.util.stream.AbstractPipeline.copyInto(Unknown Source)
at java.util.stream.AbstractPipeline.wrapAndCopyInto(Unknown Source)
at java.util.stream.FindOps$FindOp.evaluateSequential(Unknown Source)
at java.util.stream.AbstractPipeline.evaluate(Unknown Source)
at java.util.stream.ReferencePipeline.findFirst(Unknown Source)
at org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:128)
at org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:74)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:136)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552)
at org.openqa.selenium.remote.RemoteWebDriver.startSession(RemoteWebDriver.java:213)
at org.openqa.selenium.remote.RemoteWebDriver.<init>(RemoteWebDriver.java:131)
at org.openqa.selenium.chrome.ChromeDriver.<init>(ChromeDriver.java:181)
at org.openqa.selenium.chrome.ChromeDriver.<init>(ChromeDriver.java:168)
at org.openqa.selenium.chrome.ChromeDriver.<init>(ChromeDriver.java:123)
at FG_RegistrationTest.NewTest.launchBrowser(NewTest.java:69)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:59)
at org.testng.internal.Invoker.invokeConfigurationMethod(Invoker.java:458)
at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:222)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:523)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
    </error>
  </testcase> <!-- launchBrowser -->
  <testcase name="verifyPasswordContainsAtLeast1Digit" time="0.000" classname="FG_RegistrationTest.NewTest">
    <skipped/>
  </testcase> <!-- verifyPasswordContainsAtLeast1Digit -->
  <testcase name="verifyEmailConfirmationFelides" time="0.000" classname="FG_RegistrationTest.NewTest">
    <skipped/>
  </testcase> <!-- verifyEmailConfirmationFelides -->
  <testcase name="verifyErrZipCodeRegistration" time="0.000" classname="FG_RegistrationTest.NewTest">
    <skipped/>
  </testcase> <!-- verifyErrZipCodeRegistration -->
  <testcase name="verifyPasswordConfirmationFiled" time="0.000" classname="FG_RegistrationTest.NewTest">
    <skipped/>
  </testcase> <!-- verifyPasswordConfirmationFiled -->
  <testcase name="verifyEmptyRegistrationFields" time="0.000" classname="FG_RegistrationTest.NewTest">
    <skipped/>
  </testcase> <!-- verifyEmptyRegistrationFields -->
  <testcase name="verifyEmptyRegistrationInfoFields" time="0.000" classname="FG_RegistrationTest.NewTest">
    <skipped/>
  </testcase> <!-- verifyEmptyRegistrationInfoFields -->
  <testcase name="verifyPasswordContainsAtLeast1Letter" time="0.000" classname="FG_RegistrationTest.NewTest">
    <skipped/>
  </testcase> <!-- verifyPasswordContainsAtLeast1Letter -->
  <testcase name="verifyPasswordContainsAtLeast6Characters" time="0.000" classname="FG_RegistrationTest.NewTest">
    <skipped/>
  </testcase> <!-- verifyPasswordContainsAtLeast6Characters -->
  <testcase name="verifyInvalidEmail" time="0.000" classname="FG_RegistrationTest.NewTest">
    <skipped/>
  </testcase> <!-- verifyInvalidEmail -->
  <testcase name="verifyEmailAddressNotRegistered" time="0.000" classname="FG_RegistrationTest.NewTest">
    <skipped/>
  </testcase> <!-- verifyEmailAddressNotRegistered -->
  <testcase name="verifyssucsessregistration" time="0.000" classname="FG_RegistrationTest.NewTest">
    <skipped/>
  </testcase> <!-- verifyssucsessregistration -->
  <testcase name="verifyPasswordNotContainsSameCharacter4Time" time="0.000" classname="FG_RegistrationTest.NewTest">
    <skipped/>
  </testcase> <!-- verifyPasswordNotContainsSameCharacter4Time -->
</testsuite> <!-- FG_RegistrationTest.NewTest -->
